name: Build with PyInstaller

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # 指定你的 Python 版本，例如 '3.9' 或 '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller # 安装 PyInstaller
        # 如果你有 requirements.txt 文件，在这里安装你的项目依赖
        pip install -r requirements.txt

    - name: Run PyInstaller
      run: |
        # 替换 'your_script_name.py' 为你的主脚本文件
        # 可以添加更多 PyInstaller 选项，例如 --onefile, --windowed 等
        pyinstaller main.py `
          --onedir `
          --noconsole `
          --name MusicDownloader `
          --ico=icon.ico
    - name: Copy UI Resources (Post-processing)
      # 这将在 PyInstaller 打包完成后执行
      # 将你的 ui/resources 目录复制到 dist/MusicDownloader/ 根目录下
      # 使用 robocopy /E 复制目录及其所有子目录和空子目录 (Windows)
      # 或者 cp -r (Linux/macOS)
      run: |
        robocopy "./ui/resources" "dist/MusicDownloader/ui/resources" /E /XD ".git" ".github"
      shell: pwsh # 明确指定使用 PowerShell

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: MusicDownloader
        path: dist/ # PyInstaller 默认将打包文件输出到 dist 目录
